package vn.herta.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import vn.herta.configs.DBConnectMySQL;
import vn.herta.dao.IUserDao;
import vn.herta.models.UserModel;


public class UserDaoImpl extends DBConnectMySQL implements IUserDao {
	

	public Connection conn = null;
	public PreparedStatement ps = null;
	public ResultSet rs = null;

	@Override
	public List<UserModel> findAll() {
		
		String sql ="select * from users";
		
		List<UserModel> list = new ArrayList<>(); //tao 1 list de truyen du lieu
		
		try {
			conn=super.getDatabaseConnection();
			ps=conn.prepareStatement(sql);
			rs=ps.executeQuery();
			
			while (rs.next()/*next tung dong toi cuoi bang*/) {
				list.add(
						new UserModel(
						rs.getInt("id"),
						rs.getString("username"),
						rs.getString("password"),
						rs.getString("email"),
						rs.getString("fullname")
						)
					); //add vao
			
			}
			return list;
		}catch (Exception e) {
			//TODO: handle exception
			e.printStackTrace();
		}
		
		return null;
	}

	@Override
	public User findByUserName(String username) {
	    String sql = "SELECT * FROM [User] WHERE username = ?"; // Truy vấn tìm kiếm theo username
	    try {
	        conn = new DBConnection().getConnection(); // Kết nối cơ sở dữ liệu
	        ps = conn.prepareStatement(sql);
	        ps.setString(1, username); // Gán giá trị username vào câu truy vấn
	        rs = ps.executeQuery();
	        
	        if (rs.next()) { // Sử dụng if thay vì while vì chỉ mong đợi 1 kết quả
	            User user = new User(); // Khởi tạo đối tượng User
	            user.setId(rs.getInt("id"));
	            user.setEmail(rs.getString("email"));
	            user.setUserName(rs.getString("username"));
	            user.setFullName(rs.getString("fullname"));
	            user.setPassWord(rs.getString("password"));

	            return user; // Trả về đối tượng User khi tìm thấy
	        }
	    } catch (Exception e) {
	        e.printStackTrace(); // Xử lý ngoại lệ
	    } finally {
	        // Đóng các tài nguyên để tránh rò rỉ bộ nhớ
	        try {
	            if (rs != null) rs.close();
	            if (ps != null) ps.close();
	            if (conn != null) conn.close();
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	    }
		return null;
	}

	@Override
	public void insert(UserModel user) {
		String sql = "INSERT INTO [Users](id,username, email, fullname, password) VALUES (?,?,?,?,?)";
				try {
				conn = super.getDatabaseConnection();
				ps = conn.prepareStatement(sql);
				ps.setInt(1, user.getId());
				ps.setString(2, user.getUsername());
				
		        ps.setString(3, user.getEmail());
				ps.setString(4, user.getFullname());
				ps.setString(5, user.getPassword());
				ps.executeUpdate();
				} catch (Exception e) {
					e.printStackTrace();
				}


		
	}
	public static void main(String[] args) {
		UserDaoImpl uesrDao = new UserDaoImpl();
		
		List<UserModel> list = uesrDao.findAll();
		for (UserModel user : list) {
			System.out.println(user);
		}
	}
}

